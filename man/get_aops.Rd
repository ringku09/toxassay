% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aop-analysis.R
\name{get_aops}
\alias{get_aops}
\title{Get Adverse Outcome Pathways (AOPs) from Transaction Data}
\usage{
get_aops(
  transaction,
  genes,
  diseases,
  min_support = 0.3,
  min_confidence = 0.5,
  ci_metric = "lift"
)
}
\arguments{
\item{transaction}{A binary matrix indicating the presence of interactions between chemicals, genes, and diseases.}

\item{genes}{A vector of gene symbols included in the binary matrix.}

\item{diseases}{A vector of disease IDs included in the binary matrix.}

\item{ci_metric}{A character string specifying the metric to use for confidence intervals. Default is \code{"lift"}.}
}
\value{
A tibble containing the resulting association rules with columns for the left-hand side (LHS) and right-hand side (RHS) of each rule,
along with various quality measures including support, confidence, lift, odds ratio, and confidence intervals.
}
\description{
The \code{get_aops()} function processes transaction data to identify and retrieve
AOPs based on specified genes and diseases. The function uses the Apriori algorithm
to generate association rules, calculates confidence intervals,
and returns a data frame of the resulting rules with additional quality measures.
}
\examples{
chemical_name <- paste0("Compound", 1:10)
gene_symbol <- paste0("GENE", 1:30)
disease_id <- paste0("Disease", 1:30)
compound_gene <- data.frame(chemical_name = sample(chemical_name, 100, replace = TRUE),
                            gene_symbol = sample(gene_symbol, 100, replace = TRUE),
                            organism_id = sample(c(9606, 10116), 100, replace = TRUE)) \%>\%
                            dplyr::distinct()
compound_disease <- data.frame(chemical_name = sample(chemical_name, 100, replace = TRUE),
                               disease_id = sample(disease_id, 100, replace = TRUE)) \%>\%
                               dplyr::distinct()
trans_data <- get_transaction(compound_gene, compound_disease)
get_aops(transaction = trans_data[[1]], genes = trans_data[[2]], diseases = trans_data[[3]])
}
