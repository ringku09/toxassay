% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subset&average-data.R
\name{mean_subset}
\alias{mean_subset}
\title{Compute Mean Expression of Subsets}
\usage{
mean_subset(
  ...,
  ge_matrix,
  metadata,
  probes = NULL,
  dose = NULL,
  time = NULL,
  names_format = "compound-dose-time",
  multicore = FALSE,
  store = FALSE,
  output_dir = missing_arg(),
  error_call = caller_env()
)
}
\arguments{
\item{ge_matrix}{A matrix of gene expression data for given compounds.}

\item{metadata}{Metadata for given compounds, usually in the form of a data frame or
tibble object.}

\item{probes}{A vector of Affymetrix probe IDs to be included. The default is \code{NULL},
which includes all probes..}

\item{dose}{A character vector of dose levels to subset the metadata and expression matrix. If NULL, all dose levels will be used.}

\item{time}{A character vector of time points to subset the metadata and expression matrix. If NULL, all time points will be used.}

\item{names_format}{A string specifying the format for labeling samples in the output. Defaults to "compound-dose-time".}

\item{multicore}{A logical value indicating whether to use multiple cores for processing. Default is \code{FALSE}.}

\item{store}{A logical value indicating whether to store the processed data. Default is \code{FALSE}.}

\item{output_dir}{A character string specifying the directory to store output files. Default is \code{missing_arg()}.}
}
\value{
A list containing two elements:
\item{expression}{A matrix of mean gene expression values for each selected subset.}
\item{metadata}{A dataframe of metadata for the resulting subsets, including sample IDs and group information.}
}
\description{
This function calculates the mean expression of specific subsets from a gene expression matrix based on metadata criteria such as dose and time.
}
\details{
This function first subsets the gene expression matrix based on the selected compounds, dose levels, and time points. It then computes the mean expression for each subset. The output includes both the averaged gene expression matrix and the corresponding metadata for each subset.
}
\examples{
sim_data <- simulate_tgxdata()
gr <- list(A = paste0("Compound", 1:5), B = paste0("Compound", 6:10))
sub_avg <- mean_subset(gr, ge_matrix = sim_data$expression, metadata = sim_data$metadata, probes = paste0("DE", 1:10), dose = "Dose1", time = "Time1")
}
